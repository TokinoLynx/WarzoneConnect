//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WarzoneConnect.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class PlotConfig {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PlotConfig() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WarzoneConnect.Properties.PlotConfig", typeof(PlotConfig).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 blaze 的本地化字符串。
        /// </summary>
        internal static string blaze {
            get {
                return ResourceManager.GetString("blaze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 mailbotservice_blaze 的本地化字符串。
        /// </summary>
        internal static string blaze_bot {
            get {
                return ResourceManager.GetString("blaze_bot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Welcome to the Cyberspace! 的本地化字符串。
        /// </summary>
        internal static string flag1 {
            get {
                return ResourceManager.GetString("flag1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Hack`em all from zero to one. 的本地化字符串。
        /// </summary>
        internal static string flag2 {
            get {
                return ResourceManager.GetString("flag2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Can you hear me? Hacker with three monitors. 的本地化字符串。
        /// </summary>
        internal static string flag3 {
            get {
                return ResourceManager.GetString("flag3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 你收到了重要邮件！输入&quot;mail&quot;查看。 的本地化字符串。
        /// </summary>
        internal static string ImportantMail {
            get {
                return ResourceManager.GetString("ImportantMail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 小心，有裤子被脱了 的本地化字符串。
        /// </summary>
        internal static string Lively_Mail01_Name {
            get {
                return ResourceManager.GetString("Lively_Mail01_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 最近有个裤子被脱了。
        ///        我在库里似乎找到了些属于你的敏感信息，我把它们编辑到EZHack的默认字典里去了。
        ///        希望那堆信息里没有你的口令信息吧（笑）
        ///        我暂存到Hacktool_Storage那里去了。下载后记得删掉。 的本地化字符串。
        /// </summary>
        internal static string Lively_Mail01_Text {
            get {
                return ResourceManager.GetString("Lively_Mail01_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 fiction.mail 的本地化字符串。
        /// </summary>
        internal static string Mail_Address {
            get {
                return ResourceManager.GetString("Mail_Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似  __      __      ____      __________   ___
        ///|\  \   /\ \    /\   \     \         \ |\  \
        ///| ## \ /  ##   /  ####\    \########## | ###
        ///| ####\\####  /  ## \##\      | ##     | ###
        ///| ##\#### ## |\ ########\  ___| ##___  | ###______
        ///| ## \##| ## | ###   \###  \   \##   \ | ###      \
        /// \##     \##  \##     \##  \##########  \########## 的本地化字符串。
        /// </summary>
        internal static string Mail_ASCII {
            get {
                return ResourceManager.GetString("Mail_ASCII", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 欢迎来到赛博空间 的本地化字符串。
        /// </summary>
        internal static string Main01_Mail01_Name {
            get {
                return ResourceManager.GetString("Main01_Mail01_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 被选召的少年啊，
        ///            欢迎来到赛博空间！（误）
        ///            时间有点紧，我先长话短说了。
        ///            我是Blaze，我的朋友是Tracer，你在用的这套系统就是他开发的。
        ///            他似乎因为遇到了一些危险，于是启动了曾经写的程序的后门，向外界寻求帮助。
        ///            你是否在这个界面启动前打开了什么程序？应该就是这样。
        ///            现在，你的首要任务是调查、找到Tracer的下落，但首先你要学习如何使用这套系统进行入侵操作。
        ///            具体的练习细节在另一封邮件里。
        ///         的本地化字符串。
        /// </summary>
        internal static string Main01_Mail01_Text {
            get {
                return ResourceManager.GetString("Main01_Mail01_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 First Contact 的本地化字符串。
        /// </summary>
        internal static string Main01_Mail02_Name {
            get {
                return ResourceManager.GetString("Main01_Mail02_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 你的第一项任务是去学习入侵1号网络靶机。
        ///            它的防御相当简陋，因为它的密码简单到世界知名。
        ///            连接[dummy1_address]，猜测密码，然后查看里面的flag文件内容。
        ///            不过在此之前，你得需要先安装远程连接程序！安装包在系统根目录下。
        ///            善用&quot;help&quot;来了解系统吧！
        ///            如果不太会，就发封邮件给我。
        ///            一旦解出这个谜题，就将flag的内容用邮件发给我。 的本地化字符串。
        /// </summary>
        internal static string Main01_Mail02_Text {
            get {
                return ResourceManager.GetString("Main01_Mail02_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 First Contact：补充 的本地化字符串。
        /// </summary>
        internal static string Main01_Sub01_Mail01_Name {
            get {
                return ResourceManager.GetString("Main01_Sub01_Mail01_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 install(空格）+ 文件名是安装程序。
        ///            connect(空格）+ ip地址是连接指定主机。
        ///            前提是那台主机是可达的，也就是你的系统可以连接到那台主机。
        ///            然后，为了方便一般人也能快速熟悉系统，Hacktool的操作与Linux系统类似，有一些指令是通用的。
        ///            你想问密码？我都说了，弱到世界知名了！搜索一下，然后一个一个试，绝对没有错。
        ///            最后，多用&quot;help&quot;！多用&quot;help&quot;！多用&quot;help&quot;！ 的本地化字符串。
        /// </summary>
        internal static string Main01_Sub01_Mail01_Text {
            get {
                return ResourceManager.GetString("Main01_Sub01_Mail01_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 学习使用工具 的本地化字符串。
        /// </summary>
        internal static string Main02_Mail01_Name {
            get {
                return ResourceManager.GetString("Main02_Mail01_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Nice！
        ///            看样子您还挺会用这系统的！也许您有当黑客的潜力呢？
        ///            你现在可以去我们的黑客素材库做客了！
        ///            地址是[hacktool_storage_address]，密码是[hacktool_storage_password]。
        ///            去那里把EZHack下载下来，然后试试用EZHack的功能攻击2号网络靶机。
        ///            地址？这·是·秘·密·哦！
        ///            不过有个提示：2号靶机与1号靶机相连。
        ///            还是一样：如果不太会，就发封邮件给我。
        ///            一旦解出这个谜题，就将flag的内容用邮件发给我。 的本地化字符串。
        /// </summary>
        internal static string Main02_Mail01_Text {
            get {
                return ResourceManager.GetString("Main02_Mail01_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 学习使用工具：补充 的本地化字符串。
        /// </summary>
        internal static string Main02_Sub01_Mail01_Name {
            get {
                return ResourceManager.GetString("Main02_Sub01_Mail01_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 不会吧？我想收回那句“有潜力”了······
        ///            EZHack的作用有2个：
        ///            brute：使用内置的字典，或是指定另一个字典进行远程连接爆破攻击。
        ///            probe：连接到别的主机时使用，扫描当前主机连接到的其他主机，并获得其信息。
        ///            另外，Hacktool的远程连接被改造过，现在它会记得之前连接过的主机信息，
        ///            下次想深入连接更深入的内网时，直接输入目标地址就行了，中途会自动建立代理。 的本地化字符串。
        /// </summary>
        internal static string Main02_Sub01_Mail01_Text {
            get {
                return ResourceManager.GetString("Main02_Sub01_Mail01_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 太棒了！ 的本地化字符串。
        /// </summary>
        internal static string Prologue_Ending_Mail01_Name {
            get {
                return ResourceManager.GetString("Prologue_Ending_Mail01_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 太棒了！你逐渐理解一切！
        ///            我也没什么东西要教你了，因为你（也许）已经掌握如何在这个未知世界里摸索。
        ///            再去一次Hacktool_Storage吧。我给临行的您准备了点新礼物。它可以保护你。
        ///            说来讽刺，在寻找Tracer的路上的阻碍之一居然是Tracer遗留下的造物······
        ///            先去Tracer的家用电脑收集情报吧。平时靶机和素材库都是由他帮忙运营，因此他的电脑应该是连接着的。
        ///            密码如果不出意外的话······应该藏在你的系统。 的本地化字符串。
        /// </summary>
        internal static string Prologue_Ending_Mail01_Text {
            get {
                return ResourceManager.GetString("Prologue_Ending_Mail01_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 你的邮件，我已经收到了 的本地化字符串。
        /// </summary>
        internal static string Side01_Ending_Mail01_Name {
            get {
                return ResourceManager.GetString("Side01_Ending_Mail01_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 哔啵~
        ///        我是Blaze的邮箱机器人服务，该服务由noctchill™研发。
        ///        以下是主人的留言：
        ///        “发了发了，我B哥啥时候骗过你啊（滑稽）。” 的本地化字符串。
        /// </summary>
        internal static string Side01_Ending_Mail01_Text {
            get {
                return ResourceManager.GetString("Side01_Ending_Mail01_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 新漏洞新发现 的本地化字符串。
        /// </summary>
        internal static string Side01_Mail01_Name {
            get {
                return ResourceManager.GetString("Side01_Mail01_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 你给我的那个AutoSploit可扩展性是真滴强。
        ///        我最近才找到一个UBurst的0日漏洞，然后用你的工具为平台弄了一个自动脚本。
        ///        收到这封邮件后就给我的机器人[BlazeBotMail]发一封邮件吧。
        ///        然后机器人会自动把Exp上传到Hacktool_Storage那里。 的本地化字符串。
        /// </summary>
        internal static string Side01_Mail01_Text {
            get {
                return ResourceManager.GetString("Side01_Mail01_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 ?????? 的本地化字符串。
        /// </summary>
        internal static string Side02_Ending_Mail01_Name {
            get {
                return ResourceManager.GetString("Side02_Ending_Mail01_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 你去打了哪个靶机？ 的本地化字符串。
        /// </summary>
        internal static string Side02_Ending_Mail01_Text {
            get {
                return ResourceManager.GetString("Side02_Ending_Mail01_Text", resourceCulture);
            }
        }
    }
}
