//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WarzoneConnect.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class EzHack_TextResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal EzHack_TextResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WarzoneConnect.Properties.EzHack_TextResource", typeof(EzHack_TextResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Brute: Failed to establish connection!.
        /// </summary>
        internal static string Brute_ConnectionFailed {
            get {
                return ResourceManager.GetString("Brute_ConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Brute: Failed to brute-force the password!.
        /// </summary>
        internal static string Brute_Failed {
            get {
                return ResourceManager.GetString("Brute_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to brute [ip addr] (optional: [option] [argument(s)]) Brute-force the designated host`s remote desktop password. Will create a proxy for intranet penetration.
        ///      Possible option(s):
        ///      -f [Document File] Use this file as the dictionary instead of the built-in one.
        /// </summary>
        internal static string Brute_Help {
            get {
                return ResourceManager.GetString("Brute_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password secured: {0}
        ///Analysing current target`s network map....
        /// </summary>
        internal static string Brute_SaveMap {
            get {
                return ResourceManager.GetString("Brute_SaveMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to probe Scan the LAN that the remote host is connected to..
        /// </summary>
        internal static string Probe_Help {
            get {
                return ResourceManager.GetString("Probe_Help", resourceCulture);
            }
        }
    }
}
